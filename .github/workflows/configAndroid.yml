name: Android CI - Build, Test, and Release

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v0.1.0'
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Step to check out the code
      - name: Check out repository
        uses: actions/checkout@v4

      # Step to set up Java JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      # Step to set up Gradle 8.7.0
      - name: Set up Gradle 8.7.0
        run: |
          wget https://services.gradle.org/distributions/gradle-8.7.0-bin.zip
          unzip gradle-8.7.0-bin.zip
          sudo mv gradle-8.7.0 /opt/gradle
        env:
          GRADLE_HOME: /opt/gradle
        shell: bash

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Grant execute permission for the gradlew script
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Step to build with Gradle
      - name: Build with Gradle
        run: ./gradlew build

      # Step to build debug APK with Gradle
      - name: Build Debug APK
        run: ./gradlew assembleDebug

      # Upload APK as an artifact for further usage
      - name: Upload Debug APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/*.apk

  release:

    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') # Hanya berjalan jika tag versi dipush
    steps:
      # Step to check out the code (required by GitHub Actions for context)
      - name: Check out repository
        uses: actions/checkout@v4

      # Download APK artifact generated in the build job
      - name: Download APK Artifact
        uses: actions/download-artifact@v3
        with:
          name: debug-apk
          path: ./debug-apk

      # Create a new GitHub Release and upload the APK
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./debug-apk/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
